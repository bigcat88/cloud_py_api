name: Test

on:
  # pull_request:
  #   branches: [main, dev]
  #   types: [opened, reopened, edited, synchronize]
  # push:
  #   branches: [dev, main]
  workflow_dispatch:

env:
  # Location of the phpunit.xml and phpunit.integration.xml files
  PHPUNIT_CONFIG: ./tests/phpunit.xml
  PHPUNIT_INTEGRATION_CONFIG: ./tests/phpunit.integration.xml
  APP_NAME: mediadc

jobs:
  phpunit-mysql:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-versions: ["7.4", "8.0"]
        server-versions: ['master']

    services:
      mysql:
        image: mariadb:10.10
        ports:
          - 4444:3306/tcp
        env:
          MYSQL_ROOT_PASSWORD: rootpassword
        options: --health-cmd="mysqladmin ping" --health-interval 5s --health-timeout 2s --health-retries 5

    steps:
      - name: Set app env
        run: |
          # Split and keep last
          echo "APP_NAME=${GITHUB_REPOSITORY##*/}" >> $GITHUB_ENV

      - name: Enable ONLY_FULL_GROUP_BY MySQL option
        run: |
          echo "SET GLOBAL sql_mode=(SELECT CONCAT(@@sql_mode,',ONLY_FULL_GROUP_BY'));" | mysql -h 127.0.0.1 -P 4444 -u root -prootpassword
          echo "SELECT @@sql_mode;" | mysql -h 127.0.0.1 -P 4444 -u root -prootpassword

      - name: Checkout server
        uses: actions/checkout@v3
        with:
          submodules: true
          repository: nextcloud/server
          ref: ${{ matrix.server-versions }}

      - name: Checkout app
        uses: actions/checkout@v3
        with:
          path: apps/${{ env.APP_NAME }}

      - name: Set up php ${{ matrix.php-versions }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          tools: phpunit
          extensions: mbstring, iconv, fileinfo, intl, mysql, pdo_mysql
          coverage: none

      - name: Set up PHPUnit
        working-directory: apps/${{ env.APP_NAME }}
        run: composer i

      - name: Set up Nextcloud
        env:
          DB_PORT: 4444
        run: |
          mkdir data
          ./occ maintenance:install --verbose --database=mysql --database-name=nextcloud --database-host=127.0.0.1 --database-port=$DB_PORT --database-user=root --database-pass=rootpassword --admin-user admin --admin-pass password
          ./occ app:enable ${{ env.APP_NAME }}

      - name: Check PHPUnit config file existence
        id: check_phpunit
        uses: andstor/file-existence-action@v2
        with:
          files: apps/${{ env.APP_NAME }}/${{ env.PHPUNIT_CONFIG }}

      - name: Run Nextcloud
        run: php -S localhost:8080 &

      - name: PHPUnit
        # Only run if phpunit config file exists
        if: steps.check_phpunit.outputs.files_exists == 'true'
        working-directory: apps/${{ env.APP_NAME }}
        run: ./vendor/phpunit/phpunit/phpunit -c ${{ env.PHPUNIT_CONFIG }}

      - name: Check PHPUnit integration config file existence
        id: check_integration
        uses: andstor/file-existence-action@v2
        with:
          files: apps/${{ env.APP_NAME }}/${{ env.PHPUNIT_INTEGRATION_CONFIG }}

      - name: PHPUnit integration
        # Only run if phpunit integration config file exists
        if: steps.check_integration.outputs.files_exists == 'true'
        working-directory: apps/${{ env.APP_NAME }}
        run: ./vendor/phpunit/phpunit/phpunit -c ${{ env.PHPUNIT_INTEGRATION_CONFIG }}

  phpunit-pgsql:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-versions: ["8.0"]
        server-versions: ["master"]

    services:
      postgres:
        image: postgres
        ports:
          - 4444:5432/tcp
        env:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: rootpassword
          POSTGRES_DB: nextcloud
        options: --health-cmd pg_isready --health-interval 5s --health-timeout 2s --health-retries 5

    steps:
      - name: Set app env
        run: |
          # Split and keep last
          echo "APP_NAME=${GITHUB_REPOSITORY##*/}" >> $GITHUB_ENV

      - name: Checkout server
        uses: actions/checkout@v3
        with:
          submodules: true
          repository: nextcloud/server
          ref: ${{ matrix.server-versions }}

      - name: Checkout app
        uses: actions/checkout@v3
        with:
          path: apps/${{ env.APP_NAME }}

      - name: Set up php ${{ matrix.php-versions }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          tools: phpunit
          extensions: mbstring, iconv, fileinfo, intl, pgsql, pdo_pgsql
          coverage: none

      - name: Set up PHPUnit
        working-directory: apps/${{ env.APP_NAME }}
        run: composer i

      - name: Set up Nextcloud
        env:
          DB_PORT: 4444
        run: |
          mkdir data
          ./occ maintenance:install --verbose --database=pgsql --database-name=nextcloud --database-host=127.0.0.1 --database-port=$DB_PORT --database-user=root --database-pass=rootpassword --admin-user admin --admin-pass password
          ./occ app:enable ${{ env.APP_NAME }}

      - name: Check PHPUnit config file existence
        id: check_phpunit
        uses: andstor/file-existence-action@v2
        with:
          files: apps/${{ env.APP_NAME }}/${{ env.PHPUNIT_CONFIG }}

      - name: PHPUnit
        # Only run if phpunit config file exists
        if: steps.check_phpunit.outputs.files_exists == 'true'
        working-directory: apps/${{ env.APP_NAME }}
        run: ./vendor/phpunit/phpunit/phpunit -c ${{ env.PHPUNIT_CONFIG }}

      - name: Check PHPUnit integration config file existence
        id: check_integration
        uses: andstor/file-existence-action@v2
        with:
          files: apps/${{ env.APP_NAME }}/${{ env.PHPUNIT_INTEGRATION_CONFIG }}

      - name: Run Nextcloud
        # Only run if phpunit integration config file exists
        if: steps.check_integration.outputs.files_exists == 'true'
        run: php -S localhost:8080 &

      - name: PHPUnit integration
        # Only run if phpunit integration config file exists
        if: steps.check_integration.outputs.files_exists == 'true'
        working-directory: apps/${{ env.APP_NAME }}
        run: ./vendor/phpunit/phpunit/phpunit -c ${{ env.PHPUNIT_INTEGRATION_CONFIG }}

  # phpunit-oci:
  #   runs-on: ubuntu-20.04

  #   strategy:
  #     matrix:
  #       php-versions: ["8.0"]
  #       server-versions: ["master"]

  #   services:
  #     oracle:
  #       image: deepdiver/docker-oracle-xe-11g # 'wnameless/oracle-xe-11g-r2'
  #       ports:
  #         - 1521:1521/tcp

  #   steps:
  #     - name: Set app env
  #       run: |
  #         # Split and keep last
  #         echo "APP_NAME=${GITHUB_REPOSITORY##*/}" >> $GITHUB_ENV

  #     - name: Checkout server
  #       uses: actions/checkout@v3
  #       with:
  #         submodules: true
  #         repository: nextcloud/server
  #         ref: ${{ matrix.server-versions }}

  #     - name: Checkout app
  #       uses: actions/checkout@v3
  #       with:
  #         path: apps/${{ env.APP_NAME }}

  #     - name: Set up php ${{ matrix.php-versions }}
  #       uses: shivammathur/setup-php@v2
  #       with:
  #         php-version: ${{ matrix.php-versions }}
  #         extensions: mbstring, fileinfo, intl, sqlite, pdo_sqlite, oci8
  #         tools: phpunit
  #         coverage: none

  #     - name: Set up PHPUnit
  #       working-directory: apps/${{ env.APP_NAME }}
  #       run: composer i

  #     - name: Set up Nextcloud
  #       env:
  #         DB_PORT: 1521
  #       run: |
  #         mkdir data
  #         ./occ maintenance:install --verbose --database=oci --database-name=XE --database-host=127.0.0.1 --database-port=$DB_PORT --database-user=autotest --database-pass=owncloud --admin-user admin --admin-pass admin
  #         ./occ app:enable ${{ env.APP_NAME }}

  #     - name: Check PHPUnit config file existence
  #       id: check_phpunit
  #       uses: andstor/file-existence-action@v2
  #       with:
  #         files: apps/${{ env.APP_NAME }}/${{ env.PHPUNIT_CONFIG }}

  #     - name: PHPUnit
  #       # Only run if phpunit config file exists
  #       if: steps.check_phpunit.outputs.files_exists == 'true'
  #       working-directory: apps/${{ env.APP_NAME }}
  #       run: ./vendor/phpunit/phpunit/phpunit -c ${{ env.PHPUNIT_CONFIG }}

  #     - name: Check PHPUnit integration config file existence
  #       id: check_integration
  #       uses: andstor/file-existence-action@v2
  #       with:
  #         files: apps/${{ env.APP_NAME }}/${{ env.PHPUNIT_INTEGRATION_CONFIG }}

  #     - name: Run Nextcloud
  #       # Only run if phpunit integration config file exists
  #       if: steps.check_integration.outputs.files_exists == 'true'
  #       run: php -S localhost:8080 &

  #     - name: PHPUnit integration
  #       # Only run if phpunit integration config file exists
  #       if: steps.check_integration.outputs.files_exists == 'true'
  #       working-directory: apps/${{ env.APP_NAME }}
  #       run: ./vendor/phpunit/phpunit/phpunit -c ${{ env.PHPUNIT_INTEGRATION_CONFIG }}

  phpunit-summary:
    runs-on: ubuntu-latest
    needs: [phpunit-mysql, phpunit-pgsql]

    if: always()

    name: phpunit-summary

    steps:
      - name: PHPUnit summary status
        run: if ${{ needs.phpunit-mysql.result != 'success' || needs.phpunit-pgsql.result != 'success' }}; then exit 1; fi

  js-unit:
    runs-on: ubuntu-latest

    steps:
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: npm run test
